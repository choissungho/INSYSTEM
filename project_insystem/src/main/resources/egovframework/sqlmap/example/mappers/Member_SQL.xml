<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="egovframework.example.sample.service.impl.MemberMapper">
			
			<!-- 페이징 처리 위한 개발자 카운트값 쿼리 -->
			<select id="member_count" resultType="Integer">
				select count(*) from insystem.DVLPR_LL where delete_yn='N';
			</select>
			
			<!-- 개발자 리스트 페이징처리후 뿌려주는 쿼리 -->
			<select id="member_list" resultType="egovMap" parameterType="Integer">
				select * from insystem.dvlpr_ll where delete_yn ='N' order by insystem.dvlpr_ll.dvlpr_no desc limit 10 offset #{index};
			</select>
			
			
			<!-- 개발자 상세페이지 값 뿌려주는 쿼리 -->
			<select id="member_detail" resultType="egovMap" parameterType="Integer">
				select * from insystem.dvlpr_ll where dvlpr_no = #{member};
			</select>
			
			
			
			<!-- 개발자 등록을 위한 삽입 쿼리 -->
			<insert id="member_reg" parameterType="java.util.Map">
				INSERT INTO insystem.DVLPR_LL (
				DVLPR_NO,DVLPR_NM,DVLPR_SE,TELNO1,TELNO2,TELNO3,RESDNC_ATPT,EMAIL,GRAD,RGLLBR_YY,RGLLBR_MT,IRGLLBR_YY,IRGLLBR_MT,COSA_YN,UNTPC,RGLLBR_YN,FRST_REGISTER,LAST_UPDUSR
				)
				VALUES(
				nextval('insystem.seq_dvlpr_no'),#{dvlpr_nm},#{dvlpr_se},#{tel_no1},#{tel_no2},#{tel_no3},#{resdnc_atpt},#{email},#{grad},
				#{rgllbr_yy}::numeric,#{rgllbr_mt}::numeric,#{lrgllbr_yy}::numeric,#{lrgllbr_mt}::numeric,#{cosa_yn},#{untpc}::numeric,#{rgllbr_yn},#{reg_admin},#{reg_admin}
				);
			</insert>
			
			<update id="member_modify" parameterType="java.util.Map">
				UPDATE insystem.dvlpr_ll SET 
				
				DVLPR_NM = #{dvlpr_nm},
				DVLPR_SE = #{dvlpr_se},
				TELNO1 = #{tel_no1},
				TELNO2 = #{tel_no2},
				TELNO3 = #{tel_no3},
				RESDNC_ATPT = #{resdnc_atpt},
				EMAIL = #{email},
				GRAD = #{grad},
				RGLLBR_YY = #{rgllbr_yy}::numeric,
				RGLLBR_MT = #{rgllbr_mt}::numeric,
				IRGLLBR_YY = #{lrgllbr_yy}::numeric,
				IRGLLBR_MT = #{lrgllbr_mt}::numeric,
				UNTPC = #{untpc}::numeric,
				LAST_UPDUSR = #{reg_admin},
				COSA_YN = #{cosa_yn},
				RGLLBR_YN = #{rgllbr_yn},
				last_updde = now()::timestamp without time zone
				
				
				WHERE dvlpr_no = #{dvlpr_no}::Integer;
			</update>
			
			<update id="member_delete" parameterType="Integer">
				UPDATE insystem.dvlpr_ll SET 
				delete_yn= 'Y'
				WHERE dvlpr_no = #{member}::Integer;
			</update>

</mapper>